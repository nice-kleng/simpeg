<?php

namespace App\Http\Controllers\Sosmed;

use App\Exports\ReportTikTokKontenExport;
use App\Http\Controllers\Controller;
use App\Models\Product;
use App\Models\ReportTikTok;
use App\Models\User;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Yajra\DataTables\DataTables;
use Illuminate\Routing\Controllers\HasMiddleware;
use Illuminate\Routing\Controllers\Middleware;
use Maatwebsite\Excel\Facades\Excel;

class ReportTikTokController extends Controller implements HasMiddleware
{
    public static function middleware(): array
    {
        return [
            new Middleware('permission:View Report TikTok', only: ['index']),
            new Middleware('permission:Create Report TikTok', only: ['store']),
            new Middleware('permission:Edit Report TikTok', only: ['update']),
            new Middleware('permission:Delete Report TikTok', only: ['destroy']),
            new Middleware('permission:Export Report TikTok', only: ['export']),
        ];
    }
    /**
     * Display a listing of the resource.
     */
    public function index(Request $request)
    {
        if ($request->ajax()) {
            if (Auth::user()->hasRole('Super Admin')) {
                $reportTikTok = ReportTikTok::orderBy('tanggal', 'desc')->get();
            } else {
                $reportTikTok = ReportTikTok::whereHas('pics', function ($query) {
                    $query->where('user_id', Auth::user()->id);
                })->orderBy('tanggal', 'desc')->get();
            }
            return DataTables::of($reportTikTok)
                ->addIndexColumn('DT_RowIndex')
                ->addColumn('pics', function ($row) {
                    return $row->pics->pluck('name')->implode(', ');
                })
                ->addColumn('tanggal', function ($row) {
                    return \Carbon\Carbon::parse($row->tanggal)->locale('id')->isoFormat('D MMMM YYYY');
                })
                ->addColumn('action', function ($row) {
                    $btn = '<a href="' . route('reportTikTok.edit', $row->kd_report_tiktok) . '" class="edit btn btn-warning">Edit</a>';
                    $btn .= '<a href="javascript:void(0)" class="delete btn btn-danger" data-url="' . route('reportTikTok.destroy', $row->kd_report_tiktok) . '" onclick="deleteData(this)">Delete</a>';
                    return $btn;
                })
                ->make(true);
        }
        return view('sosmed.timeline.tiktok.content.report_tik_tok');
    }

    /**
     * Show the form for creating a new resource.
     */
    public function create()
    {
        $products = Product::orderBy('nama_product', 'asc')->get();
        $pics = User::role('Content Creator')->orderBy('name', 'asc')->get();
        return view('sosmed.timeline.tiktok.content.create', compact('products', 'pics'));
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store(Request $request)
    {
        $request->validate([
            'link_konten' => 'required|url',
            'pics' => 'required|array',
            'pics.*' => 'required|exists:users,id',
        ]);

        $pics = $request->pics ?? [];
        if (!Auth::user()->hasRole('Super Admin')) {
            $pics[] = Auth::user()->id;
        }

        $kd_report_tiktok = 'RT' . date('Ymd') . str_pad(ReportTikTok::count() + 1, 4, '0', STR_PAD_LEFT);
        $request['kd_report_tiktok'] = $kd_report_tiktok;
        $reportTikTok = ReportTikTok::create($request->all());
        $reportTikTok->pics()->attach($pics);
        return redirect()->route('reportTikTok.index')->with('message', 'Data berhasil ditambahkan')->with('title', 'Berhasil')->with('type', 'success');
    }

    /**
     * Display the specified resource.
     */
    public function show(ReportTikTok $reportTikTok)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     */
    public function edit(ReportTikTok $reportTikTok)
    {
        $products = Product::orderBy('nama_product', 'asc')->get();
        $pics = User::role('Content Creator')->orderBy('name', 'asc')->get();
        return view('sosmed.timeline.tiktok.content.edit', compact('reportTikTok', 'products', 'pics'));
    }

    /**
     * Update the specified resource in storage.
     */
    public function update(Request $request, ReportTikTok $reportTikTok)
    {
        $request->validate([
            'link_konten' => 'required|url',
            'pics' => 'required|array',
            'pics.*' => 'required|exists:users,id',
        ]);

        $reportTikTok->update($request->all());
        $reportTikTok->pics()->sync($request->pics);
        return redirect()->route('reportTikTok.index')->with('message', 'Data berhasil diubah')->with('title', 'Berhasil')->with('type', 'success');
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy(ReportTikTok $reportTikTok)
    {
        $reportTikTok->pics()->detach();
        $reportTikTok->delete();
        return redirect()->route('reportTikTok.index')->with('message', 'Data berhasil dihapus')->with('title', 'Berhasil')->with('type', 'success');
    }

    public function export(Request $request)
    {
        return Excel::download(new ReportTikTokKontenExport($request->start_date, $request->end_date, $request->tipe_konten), 'report-tiktok-' . date('d-m-Y') . '.xlsx');
    }
}
